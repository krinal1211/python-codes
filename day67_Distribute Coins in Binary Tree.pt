class TreeNode(object):
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution(object):
    def distributeCoins(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        self.moves = 0

        def dfs(node):
            if not node:
                return 0

            left = dfs(node.left)
            right= dfs(node.right)

            node.val= node.val - 1 + left + right

            self.moves += abs(node.val)

            return node.val

        dfs(root)
        return self.moves
